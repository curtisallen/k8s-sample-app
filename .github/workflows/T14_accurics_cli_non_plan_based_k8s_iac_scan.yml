name: T14 - accurics cli - non plan based K8s IaC scan - with project
#removed schedule as its running from part-2 repository
on:
 workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Notify build start
        env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TCS_QE_ACCURICS_ALERTS }}
        if: success()
        id: tcs_slack_notifier
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: STARTING
          color: warning
          
      - name: T14 - accurics cli - non plan based K8s IaC scan - with project
        env:
          TCS_TOKEN: ${{ secrets.TCS_TOKEN }}
          TCS_URL: https://cloud.tenable.com/cns

        run: |
        
          echo "installing accurics cli..."
          wget -q https://downloads.accurics.com/cli/${{ secrets.TCS_CLI_VERSION }}/accurics_linux -O accurics >/dev/null
          chmod +x accurics && sudo mv accurics /usr/local/bin >/dev/null
          accurics version
          
          echo Installing terrascan..
          curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
          tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
          install terrascan /usr/local/bin && rm terrascan
          echo "performing non-plan based IaC scan and sending data to $TCS_URL:$TCS_TOKEN"
          accurics scan k8s -mode=pipeline -token=$TCS_TOKEN -appurl=$TCS_URL -project=93dca18c-bfdc-473b-9902-7f8a41277861 -provider=aws
     
      - name: Notify slack failure
        env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TCS_QE_ACCURICS_ALERTS }}
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.tcs_slack_notifier.outputs.message_id }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED
          color: DANGER
          
      - name: Notify slack success
        env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TCS_QE_ACCURICS_ALERTS }}
        if: success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.tcs_slack_notifier.outputs.message_id }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: SUCCESS
          color: good
